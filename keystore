#!/usr/bin/env bash
# Command line utility to manage custom app keys and passwords.
# Intended to be a simple wrapper around key storage commands.
# Make sure this file is your PATH or symlink it to a file in your PATH
# e.g. ln -s app-secret-store/keystore ./keystore
# Also make sure to copy the lib sub-folder as well.

# Exit if errors encountered or trying to use an undeclared variable
# set -o nounset #-o errexit

BG_STATUS_LINE="$(tput setab 3)"
FG_STATUS_LINE="$(tput setaf 0)"
BG_BODY="$(tput setab 0)"
FG_BODY="$(tput setaf 2)"
echo -n ${BG_BODY}${FG_BODY}

readonly script_path=$(realpath $(which keystore))

# Enable/Disable keystore providers here
# readonly provider="bitwarden"
readonly provider="macos_keychain"

source ${script_path//\/keystore/\/lib\/_utility.sh}
readonly keystore_provider=${script_path//\/keystore/\/lib\/provider_${provider}.sh}

# If using zsh ... 
# The following code can/should be left commented out as the completions file  
# only needs copied once or when/if it is changed
# ZSH_COMPLETIONS_DIR=~/.my-zsh-completions
# if [ -d "$ZSH_COMPLETIONS_DIR" ]; then
#   completions_path=${script_path//\/keystore/\/_keystore}
#   cp "$completions_path" "$ZSH_COMPLETIONS_DIR"
# fi

# Include the keystore provider
source $keystore_provider

# If no parameters are passed then use menu system
# The menu is expected to "exit 0" 
if [ "$#" -lt 1 ]; then
  source ${script_path//\/keystore/\/lib\/_menus.sh}
fi

help() {
  echo ""
  echo "usage:"
  echo ""
  echo "keystore help"
  echo "keystore add"
  echo "keystore delete"
  echo "keystore get"
  echo ""
}

if [ "$#" -gt 3 ]; then
  echo "Expected 1 or 2 arguments, the name of the function to perform and any argument to pass to it ..."
  help
  exit 0
fi

# Include the keystore provider
source $keystore_provider

# call function 
"$@"

exit 0
